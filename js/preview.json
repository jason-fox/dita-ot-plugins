{"d1e3": {"l": "unit-test/index.html#unit-test-plug-in","t": "Unit Test Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a Unit Testing framework for the DITA Open Toolkit. This plug-in            consists of seven DITA-OT transforms and an ANT library:          </p><p class=\"p\">  </p> </div> "},"d1e25": {"l": "unit-test/index.html#transforms","t": "Transforms","d": "<div class=\"abstract\"><p class=\"shortdesc\">Unit Testing The unit-test transform allows a user to runs a sequence of dita commands and checks that the documents created match the expected output. This is useful ...</p></div>"},"d1e117": {"l": "unit-test/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\">             Because of the nature of unit testing, this plug-in has been designed as a            standalone plug-in without dependencies which can be installed from the command line.          </span> </div> "},"d1e154": {"l": "unit-test/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">A series of test suites can be found within the plug-in at PATH_TO_DITA_OT/plugins/fox.jason.unit-test/sample. Obtaining a unit test report To run, use the unit-test transform. ...</p></div>"},"d1e627": {"l": "unit-test/index.html#github-actions","t": "Integration with GitHub Actions.","d": "<div class=\"abstract\"><p class=\"shortdesc\">GitHub Actions are a CI/CD environment integrated directly with GitHub. More information about how to set up GitHub Actions can be found on the GitHub website. GitHub Actions ...</p></div>"},"d1e713": {"l": "unit-test/index.html#travis-ci","t": "Integration with Travis CI","d": "<div class=\"abstract\"><p class=\"shortdesc\">Travis CI is a hosted, distributed continuous integration service used to build and test software projects hosted at GitHub. More information about how to set up travis integration can be found on the travis website. ...</p></div>"},"d1e864": {"l": "unit-test/index.html#coveralls","t": "Integration with Coveralls","d": "<div class=\"abstract\"><p class=\"shortdesc\">Coveralls is a web service to help you track your code coverage over time, and ensure that all your new code is fully covered. More information about how to set up coveralls-travis integration can be found on the travis website. ...</p></div>"},"d1e989": {"l": "unit-test/index.html#file-structure","t": "Unit Test File Structure","d": "<div class=\"abstract\"><p class=\"shortdesc\">The unit tests are organized in the following manner: ├── test-suite-A │ └── test │ ├── unit-test-1 │ ├── unit-test-2 │ ├── ... etc │ ├── bootstrap.xml │ └── coverage.xml │ ├── test-suite-B │ └── test │ ├── unit-test-...</p></div>"},"d1e1039": {"l": "unit-test/index.html#test-suite-files","t": "Test suite files","d": "<div class=\"abstract\"><p class=\"shortdesc\">bootstrap.xml file At the root of the tests lies a bootstrap.xml file which references the antlib.xml library as shown: &lt;project name=\"bootstrap.unit-test\"&gt; &lt;dirname property=\"test.r...</p></div>"},"d1e1188": {"l": "unit-test/index.html#test-files","t": "Individual test files","d": "<div class=\"abstract\"><p class=\"shortdesc\">Each unit test is organized in the following manner: ├── build.xml ├── document.ditamap ├── expected.html ├── test.properties (optional) └── topics └── *.dita files An ANT build.xml file to invoke the test ...</p></div>"},"d1e1281": {"l": "unit-test/index.html#api","t": "Unit Testing ANT Tasks","d": "<div class=\"abstract\"><p class=\"shortdesc\">The following ANT tasks are available from the DITA-OT Unit Test Framework: Compare-Output Fail the test if the test output file does not match the expectation file. ...</p></div>"},"d1e2292": {"l": "pandoc/index.html#pandoc-plug-in","t": "Pandoc Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a DITA-OT Plug-in to used extend the available input formats for            DITA-OT. Non DITA input sources can be pre-processed using <a class=\"xref\"> Pandoc </a> to            create create valid DITA source. Files written in multiple input formats can be            directly added to a DITA <span class=\"keyword markupname xmlelement\"> map </span> and processed as if they            had been written in DITA.          </p><p class=\"p\">  </p> </div> "},"d1e2321": {"l": "pandoc/index.html#background","t": "Background","d": "<div class=\"abstract\"><p class=\"shortdesc\">Pandoc is a Haskell library for converting from one markup format to another, and a command-line tool that uses this library. It can convert from the following formats: ...</p></div>"},"d1e2590": {"l": "pandoc/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">This plug-in needs Pandoc running on user's machine to function correctly. It also requires the presence of the xmltask jar to edit XML files as part of the ANT build. It therefore requires a series of commands to install the re...</p></div>"},"d1e2644": {"l": "pandoc/index.html#installing-pandoc","t": "Installing Pandoc","d": "<div class=\"abstract\"><p class=\"shortdesc\">To download a copy of Pandoc follow the instructions on the Install page.</p></div>"},"d1e2666": {"l": "pandoc/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">To mark a file to be passed through for Pandoc processing, label the topicref with format=\"pandoc\" within the map as shown: Usage &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;!DOCTYPE bookmap PUBLIC \"-//OAS...</p></div>"},"d1e2725": {"l": "pandoc/index.html#annotation","t": "Annotating files","d": "<div class=\"abstract\"><p class=\"shortdesc\">The examples below use Markdown as a passthrough format, other formats need to provide equivalent annotations to obtain full functionality. Where possible, annotation aligns with the Markdown DITA syntax reference based on CommonMark. ...</p></div>"},"d1e2954": {"l": "watermark/index.html#watermark-plug-in","t": "Watermark Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This is a<a class=\"xref\"> DITA-OT Plug-in </a> to add a watermark to generated PDF            files. The plugin extends standard PDF processing. It offers an extension-point            for further processing.          </p><p class=\"p\">  </p> </div> "},"d1e2980": {"l": "watermark/index.html#example","t": "Example","d": "<div class=\"abstract\"><p class=\"shortdesc\">Sample PDF Watermark</p></div>"},"d1e3004": {"l": "watermark/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\">             This is a standalone plug-in without dependencies which can be installed from            the command line.          </span> </div> "},"d1e3042": {"l": "watermark/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">The plugin extends standard PDF processing: dita --format pdf \\ --output out \\ --input document.ditamap \\ --pdf.watermark=draft|review|final By default the output PDF will be watermarked as a DRAFT. ...</p></div>"},"d1e3143": {"l": "watermark/index.html#extension-points","t": "Extension points","d": "<div class=\"abstract\"><p class=\"shortdesc\">This plug-in is designed to be extended and offers an extension point: watermark.pre - Runs an additional ANT target before the watermarking processing stage. Example ...</p></div>"},"d1e3214": {"l": "swagger/index.html#swagger-plug-in","t": "Swagger Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a DITA-OT Plug-in used to auto-create valid DITA-based REST API            documentation. The documentation can be generated directly from a <a class=\"xref\"> <dfn class=\"term\"> Swagger </dfn> </a>file and processed as if it had been written in DITA. </p><p class=\"p\">  </p> </div> "},"d1e3242": {"l": "swagger/index.html#background","t": "Background","d": "<div class=\"abstract\"><p class=\"shortdesc\">Swagger is an open-source software framework backed by a large ecosystem of tools that helps developers design, build, document, and consume RESTful Web services. While most users identify Swagger by the Swagger UI tool, ...</p></div>"},"d1e3311": {"l": "swagger/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> This plug-in needs<a class=\"xref\"> Pandoc </a>            running on  user's machine  to function correctly. It also requires the            presence of the <a class=\"xref\"> xmltask </a> jar to edit XML files as part of            the ANT build. It therefore requires a series of commands to install the            relevant plug-in dependencies and configure Pandoc.          </span> </div> "},"d1e3379": {"l": "swagger/index.html#installing-pandoc","t": "Installing Pandoc","d": "<div class=\"abstract\"><p class=\"shortdesc\">To download a copy of Pandoc follow the instructions on the Install page.</p></div>"},"d1e3402": {"l": "swagger/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">To mark a file to be passed through for Swagger processing, label the topicref with format=\"swagger\" within the map as shown: Usage &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;!DOCTYPE bookmap PUBLIC \"-//...</p></div>"},"d1e3451": {"l": "readthedocs/index.html#readthedocs-plug-in","t": "ReadTheDocs Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a DITA-OT Plug-in which creates a set of output files suitable to create            a <a class=\"xref\"> ReadTheDocs </a>            documentation project. The transform is an extension of the existing DITA-OT            markdown plug-in (<span class=\"ph codeph\"> org.lwdita </span>) and creates a well-formatted<span class=\"ph codeph\"> mkdocs.yaml </span>file. </p><p class=\"p\">  </p> </div> "},"d1e3483": {"l": "readthedocs/index.html#examples","t": "Examples","d": "<div class=\"abstract\"><p class=\"shortdesc\">Sample MkDocs.yaml File site_name: 'ReadTheDocs Plug-in' pages: - Home: index.md - 'ReadTheDocs': - 'Examples': 'topics/examples.md' - 'Full list of features': 'topics/features-full.md' - 'Basic usage': ...</p></div>"},"d1e3578": {"l": "readthedocs/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> This plug-in extends the standard<span class=\"ph codeph\"> org.lwdita </span> plug-in which            should be present in the base installation. It has no further external            dependencies, and can be installed from the command line.          </span> </div> "},"d1e3619": {"l": "readthedocs/index.html#usage","t": "Usage","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> Like any other transform, when invoked directly, the<span class=\"keyword option\"> readthedocs </span>transform requires an input document. </span> </div> "},"d1e3789": {"l": "javadoc/index.html#javadoc-plug-in","t": "Javadoc Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This is a<a class=\"xref\"> DITA-OT Plug-in </a>used to auto-create valid DITA-based<a class=\"xref\"> Javadoc </a> documentation. The initial source            of the documentation can be generated directly using the <a class=\"xref\"> JavaDoc XML Doclet </a>. The XML file can be added to the            source and processed as if it had been written in DITA.          </p><p class=\"p\">  </p> </div> "},"d1e3821": {"l": "javadoc/index.html#example","t": "Example","d": "<div class=\"abstract\"><p class=\"shortdesc\">Javadoc is a tool that parses the declarations and documentation comments in a set of source files and produces a set of HTML pages describing the classes, interfaces, constructors, methods, and fields. ...</p></div>"},"d1e3883": {"l": "javadoc/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">Run the plug-in installation commands: dita install https://github.com/doctales/org.doctales.xmltask/archive/master.zip dita install https://github.com/jason-fox/fox.jason.passthrough/archive/master.zip dita install https://github.com/jason-fox/fox.jason.pa...</p></div>"},"d1e3928": {"l": "javadoc/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">If you are using Maven you can generate XML-based Javadoc by adding the following plug-in to your pom.xml. Javadoc will be generated using the mvnpackage command. pom.xml &lt;project&gt; ... &lt;plugin&gt; ...</p></div>"},"d1e4032": {"l": "./index.html#index","t": "DITA-OT Plugins","d": "<div class=\"abstract\"> Documentation for a series of plug-in for<a class=\"xref\"> DITA Open Toolkit </a> that extends the default        processing with additional functionality      </div> "},"d1e4118": {"l": "prismjs/index.html#prism-js-plug-in","t": "Prism-JS Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This is a syntax highlighting DITA-OT Plug-in which integrates the flexible<a class=\"xref\"> <dfn class=\"term\"> PrismJS </dfn> </a>            highlighting library into the DITA Open Toolkit engine. This enables the            generation of documents including code snippets which are automatically            colorized according to language syntax. The plug-in extends both static HTML            and PDF transtypes.          </p><p class=\"p\">  </p> </div> "},"d1e4146": {"l": "prismjs/index.html#background","t": "Background","d": "<div class=\"abstract\"><p class=\"shortdesc\">Prism is a lightweight, extensible syntax highlighter, built with modern web standards in mind. It’s a spin-off project from Dabblet. Highlights embed...</p></div>"},"d1e4210": {"l": "prismjs/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> This plug-in requires the presence of the<span class=\"ph codeph\"> fox.jason.extend.css </span>to function correctly. It also needs<a class=\"xref\"> Node.js </a> running on  user's machine to            avoid deprecation errors.          </span> </div> "},"d1e4303": {"l": "prismjs/index.html#usage","t": "Usage","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> To highlight the syntax within codeblocks, add an<span class=\"keyword markupname xmlatt\"> outputclass </span>attribute to any<span class=\"keyword markupname xmlelement\"> codeph </span>or<span class=\"keyword markupname xmlelement\"> codeblock </span>elements in your<span class=\"ph codeph\"> *.dita </span>files. Alternatively add an<span class=\"keyword markupname xmlatt\"> outputclass </span>attribute to the<span class=\"keyword markupname xmlelement\"> body </span>element, and all<span class=\"keyword markupname xmlelement\"> codeph </span>or<span class=\"keyword markupname xmlelement\"> codeblock </span>elements will inherit from it. </span> </div> "},"d1e4585": {"l": "favicon/index.html#favicon-plugin","t": "Favicon Plugin","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This is a DITA-OT Plug-in used to add a favicon to DITA HTML output. </p><p class=\"p\">             A favicon is a file containing a small brand image icon, associated with a            particular website or web page.  A web designer can create such an icon and             upload it to a website, and graphical web browsers can then make use of it by            displaying the icon on the associated browser tab.          </p><figure class=\"fig fignone\"> <img class=\"image img-thumbnail\">  </img> </figure> </div> "},"d1e4612": {"l": "favicon/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">Run the plug-in installation commands: dita install https://github.com/jason-fox/fox.jason.favicon/archive/master.zip The dita command line tool requires no additional configuration.</p></div>"},"d1e4644": {"l": "favicon/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">To run, use any html transform and add the --args.favicon , --args.faviconpath and args.faviconroot parameters. The new args.favicon.* parameters follow the existing syntax used by DITA-OT for CSS files. di...</p></div>"},"d1e4811": {"l": "audiobook/index.html#audiobook-plug-in","t": "Audiobook Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This DITA-OT plug-in transforms DITA to speech in the form of an audiobook. It            uses freely available Text-to-Speech cloud services to transform SSML files            into MP3 audio files or a single <span class=\"ph codeph\"> *.m4a </span> MPEG-4 audio file in            the form of an audiobook.          </p><p class=\"p\">  </p> </div> "},"d1e4837": {"l": "audiobook/index.html#example","t": "Example","d": "<div class=\"abstract\"><p class=\"shortdesc\">DITA Topic &lt;task id=\"replacecover\" xml:lang=\"en-us\"&gt; &lt;title&gt;Replace the cover of your system.&lt;/title&gt; &lt;shortdesc&gt;The cover needs to be put back on to reduce problems from dust.&lt;/shortdesc&gt; &lt;taskbody&gt; &lt;steps&gt...</p></div>"},"d1e4876": {"l": "audiobook/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">This plug-in relies on an external Text-to-Speech cloud service and the FFmpeg tool both of which will need to be configured before use. Run the plug-in installation commands: dita install https://github.com/jason-fox...</p></div>"},"d1e4911": {"l": "audiobook/index.html#ffmpeg","t": "Installing the FFMpeg tool","d": "<div class=\"abstract\"><p class=\"shortdesc\">FFmpeg is a free software project consisting of a software suite of libraries and programs for handling video, audio, and other multimedia files and streams. FFmpeg is published under the GNU Lesser General Public License 2...</p></div>"},"d1e4944": {"l": "audiobook/index.html#text-to-speech","t": "Signing up for a Text-to-Speech Service","d": "<div class=\"abstract\"><p class=\"shortdesc\">Several publicly available text-to-speech cloud services are available for use, they typically offer a try-before-you-buy option and generally offer sample access to the service for without cost. Upgrading to a paid version will be necessary...</p></div>"},"d1e5132": {"l": "audiobook/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">Obtaining a series of SSML Files To run the SSML transformation, set the transtype parameter to ssml, or pass the --format=ssml option to the dita command line. dita --format ssml \\ --out...</p></div>"},"d1e5460": {"l": "audiobook/index.html#voice-selection","t": "Selecting a voice to use","d": "<div class=\"abstract\"><p class=\"shortdesc\">When running the mp3 or audiobook transforms, the male voice corresponding to the xml:lang attribute of the root topic will be chosen to render the speech. Use the --ssml.gender=female parameter to switch to a female voice. If no voice of th...</p></div>"},"d1e5551": {"l": "audiobook/index.html#ssml-markup","t": "Marking up SSML tags.","d": "<div class=\"abstract\"><p class=\"shortdesc\">Some DITA tags such as p and b translate directly to SSML, however there is rich vocabulary of audio effects which are missing from the vanilla DITA specification. These can be accommodated using the props attribute added to ph ta...</p></div>"},"d1e6134": {"l": "translate.xliff/index.html#xliff-translate-plug-in","t": "XLIFF Translate Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             DITA-OT Translate Plug-in is a plug-in to create, auto-translate and re-merge            XLIFF files, generating translated documentation in a targeted foreign            language. It can create and consume files using either XLIFF 1.2 or XLIFF 2.1            format.          </p><p class=\"p\">  </p> </div> "},"d1e6157": {"l": "translate.xliff/index.html#example","t": "Example","d": "<div class=\"abstract\"><p class=\"shortdesc\">This plug-in consists of three DITA-OT transforms: The xliff-create transform creates XLIFF and skeleton files from the *.dita files. The xl...</p></div>"},"d1e6236": {"l": "translate.xliff/index.html#install","t": "Install","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a standalone plug-in without dependencies which can be installed from            the command line.          </p><p class=\"shortdesc\"> If the<span class=\"keyword option\"> xliff-translate </span> transform is to be used, the chosen            translation service (usually an external cloud service) will need to be            configured before use.          </p> </div> "},"d1e6280": {"l": "translate.xliff/index.html#autotranslation-services","t": "Automatic Translation Services","d": "<div class=\"abstract\"><p class=\"shortdesc\">Several publicly available automatic translation cloud services are available for use, they typically offer a try-before-you-buy option and generally offer sample access to the service for without cost. Upgrading to a paid version will be ne...</p></div>"},"d1e6680": {"l": "translate.xliff/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">XLIFF 1.2 Invocation from the command line 1. to create an XLIFF 1.2 File and associated skeletons with run: dita --format xliff-create \\ --input document.ditamap \\ --output out \\ --xliff.version=1 ...</p></div>"},"d1e7160": {"l": "open-graph/index.html#extended-css-plug-in","t": "Extended CSS Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This is a DITA-OT Plug-in used to add open graph meta data to DITA HTML output. </p><p class=\"p\">             The Open Graph Protocol is a defined system to convey the contents of webpages on SNS.             By setting Open Graph properly, a specified <span class=\"ph codeph\"> image </span><span class=\"ph codeph\"> title </span>and<span class=\"ph codeph\"> description </span>is displayed when a web content is shared. </p> </div> "},"d1e7191": {"l": "open-graph/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">This is a standalone plug-in without dependencies which can be installed from the command line. Run the plug-in installation commands: dita install https://github.com/jason-fox/jason.fox.open-graph/archive/master.zip ...</p></div>"},"d1e7226": {"l": "open-graph/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">Adding Open Graph Meta Data to HTML output To run, use any html transform and add theopen-graph.url parameter. The new open-graph.* parameters follow the existing syntax used by DITA-OT for CSS files. dita --format html5 ...</p></div>"},"d1e7374": {"l": "pretty-dita/index.html#pretty-dita-plug-in","t": "DITA Prettifier Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a DITA prettifier DITA-OT Plug-in which formats DITA XML in an            aesthetically pleasing manner. <span class=\"keyword markupname xmlelement\"> topic </span>elements,<span class=\"keyword markupname xmlelement\"> section </span>elements,<span class=\"keyword markupname xmlelement\"> p </span> elements etc. are regularly indented so            the raw DITA XML files can be scanned by humans:          </p><p class=\"p\">  </p> </div> "},"d1e7445": {"l": "pretty-dita/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">This is a standalone plug-in without dependencies which can be installed from the command line. Run the plug-in installation commands: dita install https://github.com/jason-fox/fox.jason.pretty-dita/archive/master.zip...</p></div>"},"d1e7479": {"l": "pretty-dita/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">Like any other transform, when invoked directly, the prettier requires an input document. Prettifying DITA files for a document To prettify DITA files for a document, set the transtype param...</p></div>"},"d1e7683": {"l": "pretty-dita/index.html#format","t": "Formatting Rules","d": "<div class=\"abstract\"><p class=\"shortdesc\">The pretty-dita DITA-OT Plug-in is an opinionated code formatter, DITA files are formatted to according to a well-defined set of rules. Basic Block Elements By default all DITA elements (not listed in the ...</p></div>"},"d1e7986": {"l": "validate.svrl.text-rules/index.html#spelling-and-grammar-checker-plug-in","t": "Spelling and Grammar Checker Plug-in","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> The Spelling and Grammar Checker plug-in for DITA OT is an<span class=\"ph b\"> extension </span> of            the base <a class=\"xref\"> DITA Validator </a>which adds simple rule-based<span class=\"ph b\"> spelling and grammar </span> validation for the            text elements within DITA documents.          </span> </div> "},"d1e8066": {"l": "validate.svrl.text-rules/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> This plug-in extends the standard<span class=\"ph codeph\"> com.here.validate.svrl </span>            plug-in which should also be installed on the machine.  It has no further            external dependencies, and can be installed from the command line.          </span> </div> "},"d1e8112": {"l": "validate.svrl.text-rules/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\"></p></div>"},"d1e8125": {"l": "validate.svrl.text-rules/index.html#command-line","t": "Command Line","d": "<div class=\"abstract\"><p class=\"shortdesc\">A test document can be found within the plug-in at: PATH_TO_DITA_OT/plugins/com.here.validate.svrl.text-rules/sample Creating an SVRL file To create an SVRL file with the spell-checker plug-in use the text...</p></div>"},"d1e8434": {"l": "validate.svrl.text-rules/index.html#using-ant","t": "Using ANT","d": "<div class=\"abstract\"><p class=\"shortdesc\">An ANT build file is supplied in the same directory as the sample document. The main target can be seen below: ANT Target &lt;dirname property=\"dita.dir\" file=\"PATH_TO_DITA_OT\"/&gt; &lt;property name=\"dita.exec\" value=\"${...</p></div>"},"d1e8463": {"l": "validate.svrl.text-rules/index.html#configuration","t": "Configuration","d": "<div class=\"abstract\"><p class=\"shortdesc\">Internationalization The spelling and grammar checker currently supports three languages: en - English de - German ...</p></div>"},"d1e8639": {"l": "validate.svrl.text-rules/index.html#ignoring-rules","t": "Ignoring Validator Rules","d": "<div class=\"abstract\"><p class=\"shortdesc\">Removing a rule globally Rules can be made inactive by altering the severity (see above). Alternatively a rule can be commented out in the XSL configuration file. Ignoring a rule throughou...</p></div>"},"d1e8758": {"l": "validate.svrl.text-rules/index.html#error-messages","t": "Error Messages","d": "<div class=\"abstract\"><p class=\"shortdesc\">Sample Document A sample document can be found within the plug-in which can used to test plug-in rules. The document covers both positive and negative test cases. The sample document contains valid DITA which can be ...</p></div>"},"d1e9025": {"l": "postman/index.html#postman-plug-in","t": "Postman Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a DITA-OT Plug-in used to auto-create valid DITA-based REST API            documentation. The documentation can be generated directly from a <a class=\"xref\"> Postman Collection </a>file and processed as if it had been written in DITA. </p><p class=\"p\">  </p> </div> "},"d1e9051": {"l": "postman/index.html#background","t": "Background","d": "<div class=\"abstract\"><p class=\"shortdesc\">Postman is a software development tool which a developer can use to build, publish, document, design, monitor, test and debug their REST APIs. More information about Postman can be found at postman.com. ...</p></div>"},"d1e9113": {"l": "postman/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">This plug-in needs Pandoc running on user's machine to function correctly. It also requires the presence of the xmltask jar to edit XML files as part of the ANT build. It therefore requires a series of commands to install the re...</p></div>"},"d1e9186": {"l": "postman/index.html#installing-pandoc","t": "Installing Pandoc","d": "<div class=\"abstract\"><p class=\"shortdesc\">To download a copy of Pandoc follow the instructions on the Install page.</p></div>"},"d1e9208": {"l": "postman/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">To mark a file to be passed through for Postman processing, label the topicref with format=\"postman\" within the map as shown: &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;!DOCTYPE bookmap PUBLIC \"-//OASIS//DTD DITA BookMap//EN\" \"bo...</p></div>"},"d1e9252": {"l": "validate.svrl/index.html#dita-validator-plug-in","t": "DITA Validator Plug-in","d": "<div class=\"abstract\"> <span class=\"shortdesc\"> The DITA Validator plug-in for<a class=\"xref\"> DITA-OT </a> is a structure, style and content            checker for DITA documents. The plug-in returns information about the            compliance of the document against a <span class=\"ph b\"> modifiable </span> series of validator            rules. The plug-in also supports standard XML validation.          </span> </div> "},"d1e9304": {"l": "validate.svrl/index.html#validator-compliant-dita","t": "Validator compliant DITA","d": "<div class=\"abstract\"><p class=\"shortdesc\">The DITA Validator extends the concept of XML validation to run a series of structure and style compliance rules. Sample rules include: Whether the source files for image and codeblock ...</p></div>"},"d1e9388": {"l": "validate.svrl/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\">             This is a standalone plug-in without dependencies which can be installed from            the command line.          </span> </div> "},"d1e9425": {"l": "validate.svrl/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\"></p></div>"},"d1e9438": {"l": "validate.svrl/index.html#command-line","t": "Command Line","d": "<div class=\"abstract\"><p class=\"shortdesc\">A test document can be found within the plug-in at PATH_TO_DITA_OT/plugins/com.here.validate.svrl/sample Creating an SVRL file To create an SVRL file use the svrl transform with the --args.v...</p></div>"},"d1e9781": {"l": "validate.svrl/index.html#using-ant","t": "Using ANT","d": "<div class=\"abstract\"><p class=\"shortdesc\">An ANT build file is supplied in the same directory as the sample document. The main target can be seen below: ANT Target &lt;dirname property=\"dita.dir\" file=\"PATH_TO_DITA_OT\"/&gt; &lt;property name=\"dita.exec\" value=\"${...</p></div>"},"d1e9810": {"l": "validate.svrl/index.html#dita-validator","t": "Validator Customization","d": "<div class=\"abstract\"><p class=\"shortdesc\"></p></div>"},"d1e9822": {"l": "validate.svrl/index.html#adding-rules","t": "Adding New Validator Rules","d": "<div class=\"abstract\"><p class=\"shortdesc\">This DITA-OT plug-in contains a common ruleset of general validator rules. The ruleset has been designed to be applicable to all documents created by all users. To add new custom rules (which only apply to your specific use case) you should ...</p></div>"},"d1e9842": {"l": "validate.svrl/index.html#altering-severity","t": "Altering severity","d": "<div class=\"abstract\"><p class=\"shortdesc\">The severity of a validator rule can be altered by amending entries in the cfg/rulesset/default.xml file The plug-in supports four severity levels: FATAL - Fatal rules will fail validation and cannot be ove...</p></div>"},"d1e9916": {"l": "validate.svrl/index.html#ignoring-rules","t": "Ignoring Rules","d": "<div class=\"abstract\"><p class=\"shortdesc\">Removing validator rules globally Rules can be made inactive by altering the severity (see above). Alternatively a rule can be commented out in the XSL. To completely remove rules which do n...</p></div>"},"d1e10072": {"l": "validate.svrl/index.html#dita-fixer","t": "DITA Fixer Customization","d": "<div class=\"abstract\"><p class=\"shortdesc\">Adding a new fixable rule An editable macrofile can be found in cfg/rulesset/fix-macros.xml. If a rule can be auto fixed, a macro should be added to the file in the following format: &lt;macr...</p></div>"},"d1e10167": {"l": "validate.svrl/index.html#error-messages","t": "Validator Error Messages","d": "<div class=\"abstract\"><p class=\"shortdesc\">The following tables list the validator error messages by type and message ID. Base DITA validator rules are in normal text. Rules in bold are examples of custom rules which can be detected if the overrides transform from the Extended DITA V...</p></div>"},"d1e12638": {"l": "splash/index.html#splash-screen-plug-in","t": "Splash Screen Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This simple DITA-OT plug-in automatically displays a random cat picture from the<a class=\"xref\"> Cat API </a>,            an <a class=\"xref\"> xkcd </a>comic strip, a random anime character from<a class=\"xref\"> This anime does not exist </a>,             or a placeholder image from <a class=\"xref\"> picsum.photos </a>as a splash screen whilst waiting for a build job to complete. </p><p class=\"p\">  </p> </div> "},"d1e12672": {"l": "splash/index.html#example-splash-screen","t": "Examples","d": "<div class=\"abstract\"><p class=\"shortdesc\">The Cat API The Cat API was created by Aden Forshaw back in 2012 as a way to give back and help teach people to code, it’s now been ...</p></div>"},"d1e12837": {"l": "splash/index.html#install","t": "Install","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is a standalone plug-in without dependencies which can be installed from            the command line.          </p><p class=\"p\">             The splash screen plug-in relies on the use of ANT to obtain and display the            splash screen image. ANT 1.9+ is recommended. Older versions of the <span class=\"keyword markupname xmlelement\"> get </span>task may fail or timeout when requesting HTTPS images. </p> </div> "},"d1e12892": {"l": "splash/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">Automatically displaying a splash screen when running a build job The plugin is pre-configured to run as part of the depend.preprocess.pre build step. Running any ordinary build job will display a random cat photo. ...</p></div>"},"d1e13072": {"l": "tabs.css/index.html#css-only-tabs-plug-in","t": "CSS-only Tabs Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\"> This is a<a class=\"xref\"> DITA-OT Plug-in </a> used to create CSS-only tabbed dialog            within DITA HTML output.          </p><p class=\"p\">  </p> </div> "},"d1e13097": {"l": "tabs.css/index.html#example","t": "Example","d": "<div class=\"abstract\"><p class=\"shortdesc\">Sample DITA Input &lt;bodydiv outputclass=\"tabs small\"&gt; &lt;section id=\"lorem-ipsum\"&gt; &lt;title&gt;Lorem ipsum&lt;/title&gt; &lt;p&gt; Lorem ipsum dolor sit amet consectetur adipiscing, elit malesuada ligula vehicula netus sollic...</p></div>"},"d1e13134": {"l": "tabs.css/index.html#install","t": "Install","d": "<div class=\"abstract\"> <span class=\"shortdesc\">             This is a standalone plug-in without dependencies which can be installed from            the command line.          </span> </div> "},"d1e13177": {"l": "tabs.css/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">An HTML tabbed box is defined using a bodydiv element with an outputclass=tabs. The default size is 400px high. Three other sizes are defined: small - 200px medium -...</p></div>"},"d1e13273": {"l": "passthrough/index.html#passthrough-plugin","t": "Passthrough Plugin","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is an abstract base DITA-OT Plug-in to enable files to bypass DITA-OT            pre-processing and be copied directly over into the processing directory. It is            designed to be extended.          </p><p class=\"p\">             The plugin consists of a no-op file reader and an Antlib library. It offers two            extension-points for further processing.          </p> </div> "},"d1e13295": {"l": "passthrough/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">Run the plug-in installation commands: dita install https://github.com/doctales/org.doctales.xmltask/archive/master.zip dita install https://github.com/jason-fox/fox.jason.passthrough/archive/master.zip The dita command line tool require...</p></div>"},"d1e13333": {"l": "passthrough/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">To mark a file as requiring no processing, label it with format=\"passthrough\" within the DITA map as shown: &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;!DOCTYPE bookmap PUBLIC \"-//OASIS//DTD DITA BookMap//EN\" \"bookmap.dtd\"&gt; &lt;bookmap&gt...</p></div>"},"d1e13361": {"l": "passthrough/index.html#extension-points","t": "Extension points","d": "<div class=\"abstract\"><p class=\"shortdesc\">This plug-in is designed to be extended and offers two extension points: passthrough.pre - Runs an additional ANT target before the passthrough pre-processing stage. ...</p></div>"},"d1e13399": {"l": "passthrough/index.html#example","t": "Example","d": "<div class=\"abstract\"><p class=\"shortdesc\">The following plugin.xml will enable the post-processing of all files marked as format=NEW_FORMAT. plugin.xml Configuration &lt;plugin id=\"com.example.passthrough.dita\"&gt; &lt;feature extension=\"passthrough...</p></div>"},"d1e13454": {"l": "passthrough/index.html#ant-task","t": "ANT Task","d": "<div class=\"abstract\"><p class=\"shortdesc\">The following ANT task is available from the DITA-OT Pass Through plug-in:</p></div>"},"d1e13471": {"l": "passthrough/index.html#api","t": "Passthrough-Iterate","d": "<div class=\"abstract\"><p class=\"shortdesc\">Description Post process all files of a given format using the macro supplied. Parameters ...</p></div>"},"d1e13683": {"l": "extend.css/index.html#extended-css-plug-in","t": "Extended CSS Plug-in","d": "<div class=\"abstract\"> <p class=\"shortdesc\">             This is an abstract base DITA-OT Plug-in to extend HTML processing and allow            additional plug-ins to add an extra CSS stylesheet to the <span class=\"keyword markupname xmlelement\"> header </span>            of each HTML page. By default the plug-in does nothing apart from creating a            temporary file <span class=\"ph codeph\"> extend.css.file </span> - it is designed to be extended            so other plugins can add CSS to the blank file.          </p><p class=\"p\"> It offers three extension-points for further CSS processing. </p> </div> "},"d1e13712": {"l": "extend.css/index.html#install","t": "Install","d": "<div class=\"abstract\"><p class=\"shortdesc\">This is a standalone plug-in without dependencies which can be installed from the command line. Run the plug-in installation commands: dita install https://github.com/jason-fox/jason.fox.extend.css/archive/master.zip ...</p></div>"},"d1e13746": {"l": "extend.css/index.html#usage","t": "Usage","d": "<div class=\"abstract\"><p class=\"shortdesc\">Run any HTML dita transform e.g.: dita --format html5 --output out --input document.ditamap Each HTML output file will include an additional line in the head. Output &lt;head&gt; ... &lt;...</p></div>"}}